name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

      
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./app_code
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/my-profile-web-site:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        id: init
        working-directory: ./iac
        run: terraform init -no-color

      - name: Terraform Validate
        id: validate
        working-directory: ./iac
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        working-directory: ./iac
        run: terraform plan -auto-approve -no-color

      - name: Terraform Apply
        id: apply
        working-directory: ./iac
        run: terraform apply -auto-approve -no-color

      # - name: Update AWS ECS service
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: my-task-definition
      #     service: my-ecs-service
      #     cluster: my-ecs-cluster
      #     wait-for-service-stability: true